.. _user-guide:

User Guide
==========

The following subcommands are available in GAFtools

* :ref:`index <gaftools-index>` - indexing a GAF file for the view command.
* :ref:`order_gfa <gaftools-order-gfa>` - Ordering GFA file using BO and NO tags.
* :ref:`phase <gaftools-phase>` - Adding phase information of the reads from a haplotag TSV.
* :ref:`realign <gaftools-realign>` - Realigning GAF alignments using wavefront alignment.
* :ref:`sort <gaftools-sort>` - Sorting GAF alignments using BO and NO tags of the corresponding graph.
* :ref:`stat <gaftools-stat>` - Basic statistics of the GAF file.
* :ref:`view <gaftools-view>` - Viewing and subsetting the GAF file.

To get help for all the subcommands, please use::

    gaftools <subcommand> --help

Requirements:

* GAFtools assumes that the GFA file provided is an rGFA and requires tags like `SN`, `SO`, `LN`, and `SR`.

Links to related resources:

* `rGFA and GAF documentation <https://github.com/lh3/gfatools/blob/master/doc/rGFA.md>`_
* `GFA v1.0 documentation <https://github.com/GFA-spec/GFA-spec/blob/master/GFA1.md>`_
* `GFA v2.0 documentation <https://github.com/GFA-spec/GFA-spec/blob/master/GFA2.md>`_

.. _gaftools-index:

gaftools index
--------------

This subcommand creates a index file with the extension `.gvi` which is used by the `view` command to subset alignments.
The index is a reverse look-up table with the keys being nodes in the graph and the values being the location of the alignments which have the nodes.


.. _gaftools-order-gfa:

gaftools order_gfa
------------------

This subcommand establishes an order to the graph based on the "bubbles" in the graph. 
Here, we define the bubbles as biconnected components, i.e. not the strict definition of a bubble found in other papers.

The graph input here has to be an `rGFA <https://github.com/lh3/gfatools/blob/master/doc/rGFA.md>`_, with SN and SO tags.

The basic idea here is that we first detect all biconnected components (bubbles), and collapse the detected bubbles into one node,
which should result in a line graph made from scaffold nodes that belong to the reference and the collapsed bubbles inbetween. We then
order this line graph in ascending order based on the coordinates in the SO tag. Each node in this ordered line graph 
gets an ascending BO tag from 1 to N (N being the number of nodes in the line graph). For the nodes that represent a collapsed
bubbles, all the nodes in that bubble will get the same BO tag (Figure 1). As for the NO tag, the nodes in a bubble get an ascending 
number from 1 to M (M being the number of nodes in a bubble). However, the NO tag inside a bubble is assigned based on the node id order, i.e.
in a lexicographic order of the node IDs.
In the graph shown below, which is a part of a longer graph, when the bubbles collapsed, 
this will result in a line graph of 9 nodes.

Below we see a chain of 4 bubbles (biconnected components) and 5 scaffold nodes, where the nodes inside
the bubbles are colored blue and the scaffold nodes are colored yellow. The numbers of the node is the 
BO tag, where it increases by 1 starting from the first scaffold node on the left (19 to 27), and we see that 
all the nodes in a bubble have the same BO tag

.. image:: _static/bo_tags.png
    :width: 600

In this figure, we see the same graph but with the NO tags marked on the nodes. Scaffold nodes always 
have a NO tag of 0, and the nodes inside a bubble are marked with an increasing order of the NO tag.

.. image:: _static/no_tags.png
    :width: 600


.. _gaftools-phase:

gaftools phase
--------------

This subcommands adds the phase information of the GAF reads from a haplotag TSV file generated using 
`whatshap haplotag`. 

.. _gaftools-realign:

gaftools realign
----------------
 
This subcommand realigns all the alignments in GAF back the rGFA it was originally aligned to using Wavefront Alignment. 
This fixes alignment issues found in GraphAligner where large indels are represented as a series of small indels in the 
CIGAR string.

.. _gaftools-sort:

gaftools sort
-------------

This subcommand sorts the alignments in the GAF file using the BO and NO tags generated by `gaftools order_gfa`. Hence this 
subcommand requires initial processing of the rGFA with `order_gfa`.


.. _gaftools-stat:

gaftools stat
-------------

This subcommand returns basic statistics of the GAF alignments like number of primary and secondary alignments, total aligned bases, 
average mapping quality, etc.

.. _gaftools-view:

gaftools view
-------------

This subcommand helps view the GAF alignments, convert formatting from stable to unstable and vice-versa, and subsetting 
the files based on nodes or regions given by the user.






